name: Release

on:
  push:
    branches: [ "main" ]
    paths:
      - "Cargo.toml"

env:
  CARGO_TERM_COLOR: always

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      version-changed: ${{ steps.version.outputs.changed }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version from Cargo.toml
      id: version
      run: |
        VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Check if version changed in this commit
        git show HEAD~1:Cargo.toml > /tmp/old_cargo.toml 2>/dev/null || echo 'version = "0.0.0"' > /tmp/old_cargo.toml
        OLD_VERSION=$(grep '^version = ' /tmp/old_cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/' || echo "0.0.0")
        
        if [ "$VERSION" != "$OLD_VERSION" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Version changed from $OLD_VERSION to $VERSION"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "Version unchanged: $VERSION"
        fi

  release:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

    - name: Verify tests pass
      run: cargo test --all-features

    - name: Verify clippy passes
      run: cargo clippy --tests -- -D clippy::all

    - name: Build release
      run: cargo build --release

    - name: Package crate
      run: cargo package

    - name: Create GitHub release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.check-version.outputs.version }}
        release_name: Release v${{ needs.check-version.outputs.version }}
        body: |
          Release v${{ needs.check-version.outputs.version }}
          
          Changes in this version:
          - See commit history for detailed changes
          
          ## Installation
          ```bash
          cargo add scte35
          ```
          
          Or add to your `Cargo.toml`:
          ```toml
          [dependencies]
          scte35 = "${{ needs.check-version.outputs.version }}"
          ```
        draft: false
        prerelease: false

    - name: Publish to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: |
        cargo login "$CARGO_REGISTRY_TOKEN"
        cargo publish

    - name: Upload package to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/package/scte35-${{ needs.check-version.outputs.version }}.crate
        asset_name: scte35-${{ needs.check-version.outputs.version }}.crate
        asset_content_type: application/gzip